version: 2.1
orbs:
  docker: circleci/docker@1.0.0
workflows:
  test-build-deploy:
    jobs:
      - test-calc
      - test-python-sdk
      - test-rust-sdk
      - test-typescript-sdk
      - test-widget
      - test-sheet-ai-server

jobs:
  test-calc:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y make
            rustup component add rustfmt clippy
            cargo install cargo-llvm-cov --version 0.5.2 --locked
      - run:
          name: Run linters
          command: make lint
          working_directory: ./packages/calc
      - run:
          name: Run tests and collect coverage
          command: make coverage
          working_directory: ./packages/calc
      - store_artifacts:
          path: ~/repo/packages/calc/target/llvm-cov

  test-python-sdk:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y make python3 pip
            rustup component add rustfmt clippy
      - run:
          name: Build EqualTo python SDK
          command: make venv
          working_directory: ./packages/sdk/python
      - run:
          name: Run linters
          command: make lint
          working_directory: ./packages/sdk/python
      - run:
          name: Run tests
          command: make coverage
          working_directory: ./packages/sdk/python
      - store_artifacts:
          path: ~/repo/packages/sdk/python/tests/htmlcov

  test-rust-sdk:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y make
            rustup component add rustfmt clippy
            cargo install cargo-llvm-cov --version 0.5.2 --locked
      - run:
          name: Run linters
          command: make lint
          working_directory: ./packages/sdk/rust
      - run:
          name: Run tests
          command: make coverage
          working_directory: ./packages/sdk/rust
      - store_artifacts:
          path: ~/repo/packages/sdk/rust/target/llvm-cov

  test-typescript-sdk:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y curl make zip
            curl -fsSL https://deb.nodesource.com/setup_18.x | bash - &&
            apt-get install -y nodejs
            npm update -g npm
            rustup component add rustfmt clippy
            ./util/install-wasm-pack.sh
          working_directory: ./packages/sdk/typescript
      - run:
          name: Install node_modules
          command: npm install
          working_directory: ./packages/sdk/typescript
      - run:
          name: Build distribution
          command: npm run build
          working_directory: ./packages/sdk/typescript
      - run:
          name: Run unit tests
          command: npm test
          working_directory: ./packages/sdk/typescript
      - run:
          name: Run e2e API tests
          command: |
            npm install
            npm test
          working_directory: ./packages/sdk/typescript/e2e
      - run:
          name: Run cargo linters
          command: make lint
          working_directory: ./packages/sdk/typescript/crate
      - run:
          name: Run cargo tests
          command: cargo test
          working_directory: ./packages/sdk/typescript/crate
      - run:
          name: Make distribution zip
          command: npm run publish:zip
          working_directory: ./packages/sdk/typescript
      - store_artifacts:
          path: ./packages/sdk/typescript/equalto-software-calc.zip
          destination: equalto-calc-typescript-sdk.zip
      - run: # code style near the end to allow build to fail on more important steps first
          name: Check code style (Prettier)
          command: npm run prettier:check
          working_directory: ./packages/sdk/typescript

  test-widget:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y curl make zip
            curl -fsSL https://deb.nodesource.com/setup_18.x | bash - &&
            apt-get install -y nodejs
            npm update -g npm
            rustup component add rustfmt clippy
            ./util/install-wasm-pack.sh
          working_directory: ./packages/sdk/typescript
      - run:
          name: Install node_modules for Typescript SDK
          command: npm install
          working_directory: ./packages/sdk/typescript
      - run:
          name: Install node_modules for widget
          command: npm install
          working_directory: ./packages/widget
      - run:
          name: Run linter
          command: npm run lint
          working_directory: ./packages/widget
      - run:
          name: Build distribution
          command: npm run build-full
          working_directory: ./packages/widget

  test-sheet-ai-server:
    docker:
      - image: rust:1.66.1-slim
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt -y --no-install-recommends upgrade
            apt install --no-install-recommends -y make python3 pip
      - run:
          name: Prepare virtualenv
          command: make venv
          working_directory: ./packages/sheet_ai/server
      - run:
          name: Run linters
          command: make lint
          working_directory: ./packages/sheet_ai/server
      - run:
          name: Run tests
          command: make tests
          working_directory: ./packages/sheet_ai/server
